let stringToList (n : string) : int list= 
	let rec aux l n acc = 
		if acc < String.length n then 
		begin
		  let i = Char.code (String.get n acc) - 48 in
			aux (i::l) n (acc+1)
		end
		else
			l
		in
	aux [] n 0

let rec printl l = 
	match l with
	| [] -> Printf.printf "\n"
	| t::q -> Printf.printf "%d\n" t; printl q

(*n>=0*)
let produit_des_n_premier l n : int option=
	let rec aux l n acc =
		match l with 
		| [] -> if n == 0 then Some 0 else None
		| t::q -> if n == 0 then Some acc else aux q (n-1) (acc*t) in
	if n == 0 then Some 0
	else
		(match l with 
		| [] ->  None 
		| _ -> if n > 0 then aux l n 1 else None)

let produit_plus_grande_de_taille_n l n =
	let rec aux l n max = 
		match l with 
		| [] -> max
		| _::q ->
			(let p = produit_des_n_premier l n in
			match p with
			| None -> max
			| Some m -> if m > max then aux q n m else aux q n max) in
	aux l n 0

let _ = 
	let l = stringToList "7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450" in
	Printf.printf "%d\n" (produit_plus_grande_de_taille_n l 13)
	(*match produit_des_n_premier l 4 with
	| None -> Printf.printf "None\n"
	| Some x -> Printf.printf "%d\n" x*)
